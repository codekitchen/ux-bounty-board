{
  "name": "postcss-loader",
  "version": "0.3.0",
  "description": "PostCSS loader for webpack",
  "keywords": [
    "webpack",
    "postcss",
    "loader",
    "css",
    "postproccessor"
  ],
  "author": {
    "name": "Andrey Sitnik",
    "email": "andrey@sitnik.ru"
  },
  "license": "MIT",
  "repository": {
    "type": "git",
    "url": "https://github.com/postcss/postcss-loader.git"
  },
  "dependencies": {
    "loader-utils": "^0.2.5",
    "postcss": "^4.0.0"
  },
  "devDependencies": {
    "jshint-stylish": "1.0.0",
    "gulp-webpack": "1.1.2",
    "gulp-jshint": "1.9.0",
    "gulp-mocha": "2.0.0",
    "raw-loader": "0.5.1",
    "fs-extra": "0.13.0",
    "chai": "1.10.0",
    "gulp": "3.8.10"
  },
  "scripts": {
    "test": "gulp"
  },
  "readme": "# PostCSS for Webpack [![Build Status](https://travis-ci.org/postcss/postcss-loader.svg)](https://travis-ci.org/postcss/postcss-loader)\n\n<img align=\"right\" width=\"95\" height=\"95\" src=\"http://postcss.github.io/postcss/logo.svg\" title=\"Philosopher’s stone, logo of PostCSS\">\n\n[PostCSS] loader for [webpack] to postprocesses your CSS with [PostCSS plugins].\n\n<a href=\"https://evilmartians.com/?utm_source=postcss-loader\">\n<img src=\"https://evilmartians.com/badges/sponsored-by-evil-martians.svg\" alt=\"Sponsored by Evil Martians\" width=\"236\" height=\"54\">\n</a>\n\n[PostCSS plugins]: https://github.com/postcss/postcss#built-with-postcss\n[PostCSS]:         https://github.com/postcss/postcss\n[webpack]:         http://webpack.github.io/\n\n## Usage\n\nSet `postcss` section in webpack config:\n\n```js\nvar autoprefixer = require('autoprefixer-core');\nvar csswring     = require('csswring');\n\nmodule.exports = {\n    module: {\n        loaders: [\n            {\n                test:   /\\.css$/,\n                loader: \"style-loader!css-loader!postcss-loader\"\n            }\n        ]\n    },\n    postcss: [autoprefixer, csswring]\n}\n```\n\nNow your CSS files requirements will be processed by selected PostCSS plugins:\n\n```js\nvar css = require('./file.css');\n// => CSS after Autoprefixer and CSSWring\n```\n\n## Plugins Packs\n\nIf you want to process different styles by different PostCSS plugins you can\ndefine plugin packs in `postcss` section and use them by `?pack=name` parameter.\n\n```js\nmodule.exports = {\n    module: {\n        loaders: [\n            {\n                test:   /\\.docs\\.css$/,\n                loader: \"style-loader!css-loader!postcss-loader?pack=cleaner\"\n            },\n            {\n                test:   /\\.css$/,\n                loader: \"style-loader!css-loader!postcss-loader\"\n            }\n        ]\n    },\n    postcss: {\n        defaults: [autoprefixer, csswring],\n        cleaner:  [autoprefixer({ browsers: [] })]\n    }\n}\n```\n\n\n## Safe Mode\n\nIf you add `?safe=1` to requirement, PostCSS will try to correct any syntax\nerror that it finds in the CSS. For example, it will parse `a {` as `a {}`.\n\n```js\nvar css = require('postcss?safe=1!./broken')\n```\n",
  "readmeFilename": "README.md",
  "bugs": {
    "url": "https://github.com/postcss/postcss-loader/issues"
  },
  "homepage": "https://github.com/postcss/postcss-loader",
  "_id": "postcss-loader@0.3.0",
  "_from": "postcss-loader@"
}
